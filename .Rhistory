remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
data("iris")
iris
data(mtcars)
mtcars
data(diamonds)
data(diamond)
library(nlme)
data("Rail")
Rail
library(lme4)
install.packages("lme4")
library(lme4)
data(Arabidopsis)
Arabidopsis
data(politeness)
data(package="lme4")
data(cake)
cake
data("Dyestuff")
Dyestuff
data("Dyestuff2")
Dyestuff2
data(Penicillin)
Penicillin
data(grouseticks)
grouseticks
sleepstudy
cbpp
Pastes
VergAgg
VerbAgg
Arabidopsis
hist(Arabidopsis$total.fruits)
data(package="nlme")
Milk
RatPupWeight
Soybean
Spruce
Wheat
Wheat2
data(package="rstan")
data(package="brms")
install.packages("brms")
data(package="brms")
kidney
data(kidney)
library(brms)
kidney
inhaler
library(rethinkin)
install.packages("rethinking")
install.packages(c("coda","mvtnorm","devtools","loo","dagitty"))
library(devtools)
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty"))
library(rethinking)
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
data(packages="rethinking")
data(package="rethinking")
Dinosaurs
library(rethinking)
Dinosaurs
data(Dinosaurs)
Dinosaurs
data(Fish)
Fish
data(Hoogland)
Hoogland
data(Rinder)
Rinder
data(cherry_blossoms)
cherry_blossoms
data(foxes)
foxes
data(reedfrogs)
reedfrogs
data(milk)
milk
data(Laffer)
Laffer
data(Kline)
Kline
data(Hurricanes)
Hurricanes
data("AMTL")
AMTL
setwd("~/Box Sync/Work/The Nature Conservancy/Global Soils/AgEvidence/code-and-data")
setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#### SET WORKING DIRECTORY ####
setwd(getSrcDirectory()[1]) # Use if bash script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # Use if RStudio
#### LOAD LIBRARIES ####
library(tidyverse)
library(readxl)
#### FUNCTIONS ####
# Function to change the GL2 changes in the raw data
gl2.rename <- function(data) {
data %>%
mutate(group_level2 =
ifelse(group_level1=="Other Soil Properties" &
(group_level3=="Aggregate size"|group_level3=="Aggregate stability"|
group_level3=="Air-filled pore space"|group_level3=="Air-filled pores"|
group_level3=="Total pore space"|group_level3=="Water-filled pore space"),
"Soil Structure",
group_level2)
) %>%
mutate(group_level2 =
ifelse(group_level1=="Other Soil Properties" &
group_level3=="Decomposition rate of surface residue",
"Biotic Factors",
group_level2)) %>%
mutate(group_level2 =
ifelse(group_level1=="Other Soil Properties" & group_level3=="Soil organic matter content",
"Chemical Properties",
group_level2))
}
# Function to generate two separate columns
# based on GLs and NEs
grouping <- function(data) {
data %>%
mutate(grouping=
ifelse(is.na(group_level1_alt),
paste(group_level1,"|",group_level2,"|",group_level3),
paste(group_level1,"|",group_level2,"|",group_level3,";",
group_level1_alt,"|",group_level2_alt,"|",group_level3)
),
normative_effect=
ifelse(is.na(group_level1_alt),
paste(norm_interp2,"|",norm_interp3),
paste(norm_interp2,"|",norm_interp3,";",
norm_interp2_alt,"|",norm_interp3_alt)
)
)
}
#### READ DATA ####
# Normative effects files
ne <- read_excel("data/Normative_effects_groups.xlsx")
ne_mod <- read_excel("data/Normative_effects_groups_modified.xlsx")
ne_mod_2 <- read_excel("data/Normative_effects_groups_modified_2.xlsx")
ne_mod_3 <- read_excel("data/10Mar20_Normative_effects_groups_modified_2.xlsx")
# Data files
cc <- read_excel("data/Covercrops_AgEvidence.xlsx", sheet = "Results")
nm <- read_excel("data/NutrientMgmt_AgEvidence.xlsx", sheet = "Results")
pm <- read_excel("data/PestMgmt_AgEvidence.xlsx", sheet = "Results")
till <- read_excel("data/Tillage_AgEvidence.xlsx", sheet = "Results")
#### MANIPULATE DATA ####
# Create lists for filtering out
filtered_rv_units <- c("^#$", "(arcsine)", "log10")
filtered_finelevel_group <- c("knife_knife",
"unfertilized_plant",
"unfertilized_split",
"variable_variable",
"band_injection",
"injection_injection",
"placement_pointinjection_knifeinjection",
"surfaceband_belowsurface",
"split_preplantV6_plant_V6")
# Filter data files before data checking
cc <- cc  %>%
filter(!rv_units %in% filtered_rv_units)
nm <- nm  %>%
filter(!rv_units %in% filtered_rv_units) %>%
filter(!finelevel_group %in% filtered_finelevel_group)
till <- till %>%
filter(!rv_units %in% filtered_rv_units)
pm <- pm %>%
filter(!rv_units %in% filtered_rv_units)
head(pm)
pm$review
temp <- pm %>%
mutate(review = "Pest Management")
temp$review
#### GL1 RENAMING ####
pm <- pm %>%
mutate(review = "Pest Management")
ne_mod_3
temp <- ne_mod_3 %>%
mutate(Review=
ifelse(Review=="Early Season Pest Management",
"Pest Management",
Review)
)
temp$Review
temp$group_level1
View(ne_mod_3)
View(cc)
View(ne_mod_3)
View(till)
install.packages("stylizer")
install.packages("styler")
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
View(cc)
styler:::style_selection()
source(processing-functions.R)
source('processing-functions.R')
#### READ DATA ####
# Normative effects files
ne <- read_excel("data/Normative_effects_groups.xlsx")
ne_mod <- read_excel("data/Normative_effects_groups_modified.xlsx")
ne_mod_2 <- read_excel("data/Normative_effects_groups_modified_2.xlsx")
ne_mod_3 <- read_excel("data/10Mar20_Normative_effects_groups_modified_2.xlsx")
# Data files
cc <- read_excel("data/Covercrops_AgEvidence.xlsx", sheet = "Results")
nm <- read_excel("data/NutrientMgmt_AgEvidence.xlsx", sheet = "Results")
pm <- read_excel("data/PestMgmt_AgEvidence.xlsx", sheet = "Results")
till <- read_excel("data/Tillage_AgEvidence.xlsx", sheet = "Results")
#### MANIPULATE DATA ####
# Create lists for filtering out
filtered_rv_units <- c("^#$", "(arcsine)", "log10")
filtered_finelevel_group <- c("knife_knife",
"unfertilized_plant",
"unfertilized_split",
"variable_variable",
"band_injection",
"injection_injection",
"placement_pointinjection_knifeinjection",
"surfaceband_belowsurface",
"split_preplantV6_plant_V6")
# Filter data files before data checking
cc <- cc  %>%
filter(!rv_units %in% filtered_rv_units)
nm <- nm  %>%
filter(!rv_units %in% filtered_rv_units) %>%
filter(!finelevel_group %in% filtered_finelevel_group)
till <- till %>%
filter(!rv_units %in% filtered_rv_units)
pm <- pm %>%
filter(!rv_units %in% filtered_rv_units)
#### GL1 RENAMING ####
pm <- pm %>%
mutate(review = "Pest Management")
ne_mod_3 <- ne.mods(ne_mod_3)
#### GL2 RENAMING ####
cc <- gl2.rename(cc)
source('processing-functions.R')
source('processing-functions.R')
#### GL2 RENAMING ####
cc <- gl2.rename(cc)
till <- gl2.rename(till)
nm <- gl2.rename(nm)
pm <- gl2.rename(pm)
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
styler:::style_selection()
View(pm)
View(cc)
source('processing-functions.R')
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
source('processing-functions.R')
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
source('processing-functions.R')
source('processing-functions.R')
source('processing-functions.R')
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
styler:::style_selection()
source('processing-functions.R')
source('processing-functions.R')
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # Use if RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # Use if RStudio
#### LOAD LIBRARIES ####
library(tidyverse)
library(readxl)
source('processing-functions.R')
#### READ DATA ####
# Normative effects files
#ne <- read_excel("data/Normative_effects_groups.xlsx")
#ne_mod <- read_excel("data/Normative_effects_groups_modified.xlsx")
#ne_mod_2 <- read_excel("data/Normative_effects_groups_modified_2.xlsx")
ne_mod_3 <- read_excel("data/10Mar20_Normative_effects_groups_modified_2.xlsx")
# Data files
cc <- read_excel("data/Covercrops_AgEvidence.xlsx", sheet = "Results")
nm <- read_excel("data/NutrientMgmt_AgEvidence.xlsx", sheet = "Results")
pm <- read_excel("data/PestMgmt_AgEvidence.xlsx", sheet = "Results")
till <- read_excel("data/Tillage_AgEvidence.xlsx", sheet = "Results")
#### MANIPULATE DATA ####
# Create lists for filtering out
filtered_rv_units <- c("^#$", "(arcsine)", "log10")
filtered_finelevel_group <- c("knife_knife",
"unfertilized_plant",
"unfertilized_split",
"variable_variable",
"band_injection",
"injection_injection",
"placement_pointinjection_knifeinjection",
"surfaceband_belowsurface",
"split_preplantV6_plant_V6")
# Filter data files before data checking
cc <- cc  %>%
filter(!rv_units %in% filtered_rv_units)
nm <- nm  %>%
filter(!rv_units %in% filtered_rv_units) %>%
filter(!finelevel_group %in% filtered_finelevel_group)
till <- till %>%
filter(!rv_units %in% filtered_rv_units)
pm <- pm %>%
filter(!rv_units %in% filtered_rv_units)
#### GL1 RENAMING ####
pm <- pm %>%
mutate(review = "Pest Management")
ne_mod_3 <- ne.mods(ne_mod_3)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # Use if RStudio
#### LOAD LIBRARIES ####
library(tidyverse)
library(readxl)
source('processing-functions.R')
#### READ DATA ####
# Normative effects files
#ne <- read_excel("data/Normative_effects_groups.xlsx")
#ne_mod <- read_excel("data/Normative_effects_groups_modified.xlsx")
#ne_mod_2 <- read_excel("data/Normative_effects_groups_modified_2.xlsx")
ne_mod_3 <- read_excel("data/10Mar20_Normative_effects_groups_modified_2.xlsx")
# Data files
cc <- read_excel("data/Covercrops_AgEvidence.xlsx", sheet = "Results")
nm <- read_excel("data/NutrientMgmt_AgEvidence.xlsx", sheet = "Results")
pm <- read_excel("data/PestMgmt_AgEvidence.xlsx", sheet = "Results")
till <- read_excel("data/Tillage_AgEvidence.xlsx", sheet = "Results")
#### MANIPULATE DATA ####
# Create lists for filtering out
filtered_rv_units <- c("^#$", "(arcsine)", "log10")
filtered_finelevel_group <- c("knife_knife",
"unfertilized_plant",
"unfertilized_split",
"variable_variable",
"band_injection",
"injection_injection",
"placement_pointinjection_knifeinjection",
"surfaceband_belowsurface",
"split_preplantV6_plant_V6")
# Filter data files before data checking
cc <- cc  %>%
filter(!rv_units %in% filtered_rv_units)
nm <- nm  %>%
filter(!rv_units %in% filtered_rv_units) %>%
filter(!finelevel_group %in% filtered_finelevel_group)
till <- till %>%
filter(!rv_units %in% filtered_rv_units)
pm <- pm %>%
filter(!rv_units %in% filtered_rv_units)
#### GL1 RENAMING ####
pm <- pm %>%
mutate(review = "Pest Management")
ne_mod_3 <- ne.mods(ne_mod_3)
#### GL2 RENAMING ####
cc <- gl2.rename(cc)
till <- gl2.rename(till)
nm <- gl2.rename(nm)
pm <- gl2.rename(pm)
#### GL3 RENAMING ####
cc <- gl3.rename(cc)
till <- gl3.rename(till)
nm <- gl3.rename(nm)
pm <- gl3.rename(pm)
#### GENERATE NEW COLUMNS FOR GL AND NE ####
# Combine the two spellings of the cover crop review categories
ne_mod_3 <- ne_mod_3 %>%
mutate(Review=
ifelse(Review=="Cover Crops",
"Cover crop",
Review))
# Create new columns by calling grouping() function
cc <- cc %>%
full_join(ne_mod_3 %>%
filter(Review =="Cover crop")) %>%
select(-NOTES,-Review) %>%
mutate(per_change = ifelse(grepl("%", rv_units),
(trt2_value-trt1_value),
(trt2_value-trt1_value)/(trt1_value)*100)) %>%
mutate(per_change = round(per_change, digits = 2)) %>%
grouping()
till <- till %>%
full_join(ne_mod_3 %>%
filter(Review=="Tillage")) %>%
select(-NOTES,-Review) %>%
mutate(per_change = ifelse(grepl("%", rv_units),
(trt2_value-trt1_value),
(trt2_value-trt1_value)/(trt1_value)*100)) %>%
mutate(per_change = round(per_change, digits = 2)) %>%
grouping()
nm <- nm %>%
full_join(ne_mod_3 %>%
filter(Review=="Nutrient Management")) %>%
select(-NOTES,-Review) %>%
mutate(per_change = ifelse(grepl("%", rv_units),
(trt2_value-trt1_value),
(trt2_value-trt1_value)/(trt1_value)*100)) %>%
mutate(per_change = round(per_change, digits = 2)) %>%
grouping()
pm <- pm %>%
full_join(ne_mod_3 %>%
filter(Review=="Early Season Pest Management")) %>%
select(-NOTES,-Review) %>%
mutate(per_change = ifelse(grepl("%", rv_units),
(trt2_value-trt1_value),
(trt2_value-trt1_value)/(trt1_value)*100)) %>%
mutate(per_change = round(per_change, digits = 2)) %>%
grouping()
Sys.Date()
paste0("filtered-data/TNC_cc_",Sys.Date(),".csv")
write.csv(cc, paste0("filtered-data/Covercrops_AgEvidence_",Sys.Date(),".csv"))
write.csv(till, paste0("filtered-data/Tillage_AgEvidence_",Sys.Date(),".csv"))
write.csv(nm, paste0("filtered-data/NutrientMgmt_AgEvidence_",Sys.Date(),".csv"))
write.csv(pm, paste0("filtered-data/PestMgmt_AgEvidence_",Sys.Date(),".csv"))
dirname(sys.frame(1)$ofile)
dirname(sys.frame$ofile)
#### SET WORKING DIRECTORY ####
getCurrentFileLocation <-  function()
{
this_file <- commandArgs() %>%
tibble::enframe(name = NULL) %>%
tidyr::separate(col=value, into=c("key", "value"), sep="=", fill='right') %>%
dplyr::filter(key == "--file") %>%
dplyr::pull(value)
if (length(this_file)==0)
{
this_file <- rstudioapi::getSourceEditorContext()$path
}
return(dirname(this_file))
}
getCurrentFileLocation()
setwd(getCurrentFileLocation())
funr::get_script_path()
install.packages("funr")
funr::get_script_path()
